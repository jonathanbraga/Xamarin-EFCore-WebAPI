// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using VanEscolar.Data;
using VanEscolar.Domain;

namespace VanEscolar.Data.Migrations
{
    [DbContext(typeof(VanEscolarContext))]
    [Migration("20171223014257_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VanEscolar.Domain.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ParentId");

                    b.Property<int>("Role");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId")
                        .IsUnique()
                        .HasFilter("[ParentId] IS NOT NULL");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("VanEscolar.Domain.Parent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Complement");

                    b.Property<string>("Email");

                    b.Property<string>("Neighborhood");

                    b.Property<int>("Number");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("VanEscolar.Domain.Scholl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Complement");

                    b.Property<string>("Name");

                    b.Property<string>("Neighborhood");

                    b.Property<int>("Number");

                    b.Property<string>("Phone");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Scholls");
                });

            modelBuilder.Entity("VanEscolar.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<DateTime>("EndScholl");

                    b.Property<string>("Name");

                    b.Property<Guid?>("ParentId");

                    b.Property<Guid?>("SchollId");

                    b.Property<DateTime>("StartScholl");

                    b.Property<Guid?>("TravelId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("SchollId");

                    b.HasIndex("TravelId")
                        .IsUnique()
                        .HasFilter("[TravelId] IS NOT NULL");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("VanEscolar.Domain.Travel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("NeedTravel");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Travels");
                });

            modelBuilder.Entity("VanEscolar.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Authorize");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VanEscolar.Domain.Link", b =>
                {
                    b.HasOne("VanEscolar.Domain.Parent", "Parent")
                        .WithOne("Link")
                        .HasForeignKey("VanEscolar.Domain.Link", "ParentId");

                    b.HasOne("VanEscolar.Domain.User", "User")
                        .WithOne("Link")
                        .HasForeignKey("VanEscolar.Domain.Link", "UserId");
                });

            modelBuilder.Entity("VanEscolar.Domain.Student", b =>
                {
                    b.HasOne("VanEscolar.Domain.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId");

                    b.HasOne("VanEscolar.Domain.Scholl", "Scholl")
                        .WithMany("Students")
                        .HasForeignKey("SchollId");

                    b.HasOne("VanEscolar.Domain.Travel", "Travel")
                        .WithOne("Student")
                        .HasForeignKey("VanEscolar.Domain.Student", "TravelId");
                });
#pragma warning restore 612, 618
        }
    }
}
